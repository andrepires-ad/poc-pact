buildscript {
	ext {
		lombokVersion = '1.16.20'
		retrofitVersion = "2.3.0"
		javaxValidationVersion = '1.1.0.Final'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath group: 'au.com.dius', name: 'pact-jvm-provider-gradle_2.12', version: '3.5.14'
		// PACT
		classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.8.RELEASE")
	}
}

plugins {
	id 'java'
	id 'idea'
	// PACT
	id "au.com.dius.pact" version "3.5.14"
}

apply plugin: 'org.springframework.boot'
apply plugin: 'maven-publish'

group = 'com.appdirect.pact.consumer'
version = '0.2.3'

dependencyManagement {
	imports {
		mavenBom("org.springframework.cloud:spring-cloud-dependencies:Dalston.SR4")
	}
}

def getDockerTags() {
	def tags = []
	tags << project.version.toString()

	if (!project.version.toString().endsWith("-SNAPSHOT")) {
		// if it is not a SNAPSHOT, then also add the 'latest' tag
		tags << "latest"
	}
	return tags
}

ext {
	prNumber = project.properties['PR_NUMBER']
	dockerRegistry = "docker.appdirect.tools"
	artifactVersion = project.version.toString()
	dockerName = "${dockerRegistry}/appdirect-pact-sample/consumer-service"
	dockerTags = getDockerTags()

	// PACT
	pactBrokerHost = "pact-broker.kops-ci.appdirect.tools"
	pactBrokerTags = prNumber ? [prNumber + "-SNAPSHOT"] : [project.version]
	pactBrokerPort = 443
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
	compileOnly("org.projectlombok:lombok:${lombokVersion}")

	compile("org.springframework.boot:spring-boot-starter-web")
	compile("org.springframework.boot:spring-boot-starter-actuator")
	compile('net.logstash.logback:logstash-logback-encoder:3.5')

	// retrofit
	compileOnly("javax.validation:validation-api:${javaxValidationVersion}")
	compile("com.squareup.retrofit2:retrofit:${retrofitVersion}")
	compile("com.squareup.retrofit2:converter-jackson:${retrofitVersion}")

	// test dependencies
	testCompile("org.springframework.boot:spring-boot-starter-test")
	testCompile "org.springframework.boot:spring-boot-starter-test"
	testCompile "org.springframework.boot:spring-boot"

	// PACT LIB
	testCompile('au.com.dius:pact-jvm-consumer-junit_2.12:3.5.14')

}

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

repositories {
	mavenLocal()
	maven { url "http://repo.maven.apache.org/maven2" }
	jcenter()
}

apply from: 'build.docker.gradle'
apply from: "build.pact.gradle"
apply from: 'build.springboot.gradle'
apply from: 'build.publish.gradle'